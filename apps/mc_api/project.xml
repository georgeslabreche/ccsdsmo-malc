<project
    name = "mc_api"
    description = "Moonitor and Control Service API"
    script = "zproject.gsl"
    email = "georges@tanagraspace.com"
    >

    <include filename = "license.xml" />
    <version major = "1" minor = "0" patch = "0" />

    <!--
        Current libtool ABI version of your project's shared library.
        Start at 0:0:0 and see:
        http://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html
        for details on how/when to increment it.
        If not defined 0:0:0 will be used.
    -->
    <abi current = "1" revision = "0" age = "0" />

    <use project = "czmq" />
    <use project = "malutil" />
    <use project = "malattributes" />
    <use project = "mal" />
    <use project = "malbinary" />
    <use project = "malsplitbinary" />
    <use project = "malzmq" />
    <use project = "maltcp" />
    <use project = "malactor" />
    <use project = "generated_areas" />

    <!-- Header Files
         name := The name the header file to include without file ending
    <header name = "myproject_prelude" />
    -->

    <!-- 
        Classes, if the class header or source file doesn't exist this will
        generate a skeletons for them.
        use private = "1" for internal classes
    <class name = "myclass">Public class description</class>
    <class name = "someother" private = "1">Private class description</class>
    -->

    <!-- MO MAL Services-->
    <!--class name = "com" /-->
    <!--class name = "common" /-->

    <!-- MONITOR AND CONTROL SERVICE -->
    
    <!-- The parameter service allows the user to subscribe to parameter value report and optionally be able to set new values. -->
    <class name = "mc_parameter_get_value">
        The getValue operation returns the latest received value for a requested parameter.
        <constructor>
            Create a new class with the given name.
            <argument name = "host" type = "string" />
            <argument name = "port" type = "integer" />
        </constructor>

        <method name = "consumer actor create">
            Create a consumer actor.
            <argument name = "mal_ctx" type = "mal_ctx_t" />
            <argument name = "provider_uri" type = "mal_uri_t" />
            <argument name = "encoder" type = "mal_encoder_t" />
            <argument name = "decoder" type = "mal_decoder_t" />
        </method>

    </class>
    <class name = "mc_parameter_set_value" /> 
    
    <!-- Targets -->
    <target name = "rpi" />
    

</project>
