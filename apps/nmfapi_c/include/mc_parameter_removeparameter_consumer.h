/*  =========================================================================
    mc_parameter_removeparameter_consumer - The submit consumer for the removeParameter operation
The removeParameter operation allows a consumer to remove one or more parameters from the list of parameters supported by the parameter provider

    The MIT License (MIT)
    =========================================================================
*/

#ifndef MC_PARAMETER_REMOVEPARAMETER_CONSUMER_H_INCLUDED
#define MC_PARAMETER_REMOVEPARAMETER_CONSUMER_H_INCLUDED

#ifdef __cplusplus
extern "C" {
#endif

//  @warning THE FOLLOWING @INTERFACE BLOCK IS AUTO-GENERATED BY ZPROJECT
//  @warning Please edit the model at "api/mc_parameter_removeparameter_consumer.api" to make changes.
//  @interface
//  This is a stable class, and may not change except for emergencies. It
//  is provided in stable builds.

// The consumer URI for the removeParameter operation
#define MC_PARAMETER_REMOVEPARAMETER_CONSUMER_URI "mc/parameter/consumer/removeParameter"

//  Instanciate a consumer object for the removeParameter operation
NMFAPI_C_EXPORT mc_parameter_removeparameter_consumer_t *
    mc_parameter_removeparameter_consumer_new (mal_ctx_t *mal_ctx, mal_uri_t *provider_uri);

//  The destructor
NMFAPI_C_EXPORT void
    mc_parameter_removeparameter_consumer_destroy (mc_parameter_removeparameter_consumer_t **self_p);

//  Lock the mutex
//  A mutex is used to force a synchronous response despite the request being an asynchronous operation
NMFAPI_C_EXPORT void
    mc_parameter_removeparameter_consumer_mutex_lock (mc_parameter_removeparameter_consumer_t *self);

//  Unlock the mutex
//  A mutex is used to force a synchronous response despite the request being an asynchronous operation
NMFAPI_C_EXPORT void
    mc_parameter_removeparameter_consumer_mutex_unlock (mc_parameter_removeparameter_consumer_t *self);

//  Create and initialize the actor
NMFAPI_C_EXPORT void
    mc_parameter_removeparameter_consumer_actor_init (mc_parameter_removeparameter_consumer_t *self);

//  Get error code from processing the response
NMFAPI_C_EXPORT int
    mc_parameter_removeparameter_consumer_get_response_error_code (mc_parameter_removeparameter_consumer_t *self);

//  Get the param instance identity ids MAL message field
NMFAPI_C_EXPORT long *
    mc_parameter_removeparameter_consumer_get_field_param_identiy_id_list (mc_parameter_removeparameter_consumer_t *self);

//  Set the param instance identity ids MAL message field
NMFAPI_C_EXPORT void
    mc_parameter_removeparameter_consumer_set_field_param_identity_id_list (mc_parameter_removeparameter_consumer_t *self, long *param_inst_id_list);

//  Get the number of params MAL message field
NMFAPI_C_EXPORT size_t
    mc_parameter_removeparameter_consumer_get_field_param_identity_id_list_size (mc_parameter_removeparameter_consumer_t *self);

//  Set the number of params MAL message field
NMFAPI_C_EXPORT void
    mc_parameter_removeparameter_consumer_set_field_param_identity_id_list_size (mc_parameter_removeparameter_consumer_t *self, size_t param_identity_id_list_size);

//  @end

#ifdef __cplusplus
}
#endif

#endif
